"Name"     = 'Analisador Lexico 2016.1'
"Author"   = 'Turma de Compiladores 2016.1'
"Version"  = '1.2'
"About"    = 'Gramatica da galera'

"Start Symbol" = <Program>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{ID Head}        = {Letter}
{ID Tail}        = {Alphanumeric} + [_]
{IdAlphaNumeric} = {Alphanumeric}
{dot}            =[.]
{quote}          =['']
{String Char}    = {Printable} - ["]    
{ID NUM}         = {Digit} 
! -------------------------------------------------
! Terminals
! -------------------------------------------------

BooleanLiteral   = 'verdadeiro' | 'falso'
Identificador    = {ID Head}{ID Tail}*
numero           ={Digit}+ |{Digit}+[.]{Digit}+
tipo_cadeia      = ["]{Letter}{Alphanumeric}*["]
tipo_caractere   ={quote}[qazwsxedcrfvtgbyhnujmikolpAZQWSXCDEVFRTGBNHYUJMKILOP0123456789]{quote}
! -------------------------------------------------
! Rules
! -------------------------------------------------

!Configurações Iniciais
<bloco_de_codigo>    ::='inicio'<BXR>'fim'
<BX>                 ::= <se_entao_senao>|<DEC>|<Attr>|<Enquanto>|<Leia>|<Escreva>
<BXR>                ::= <BX><BXR2>
<BXR2>               ::= <BXR> | 

! The grammar starts below

<Program> ::= <declaracao_var_global><declaracao_programa><funcoes>
<declaracao_var_global> ::= <DEC_CONST><declaracao_var_global>|<DEC><declaracao_var_global>|
<funcoes> ::=<Funcao><FX>|                            
<FX>      ::=<Funcao>|

!Declaracao de Programa

<declaracao_programa>::='programa'<tipo> <id>'('<parametro_programa>')''inicio'<BXR>'fim''('<RETORNO>')'';'
<parametro_programa> ::=<tipo> <id> <parametro3> |<tipo> <id>|
<parametro3>         ::=','<parametro_programa> 
<RETORNO>            ::=<expressao_booleana>|tipo_caractere|tipo_cadeia|

!Identificador
<id> ::= Identificador                    
       
!Expressão Booleana

<expressao_booleana>  ::= <Aux_Expression> <expressao_booleanaR> 
              
<expressao_booleanaR>  ::= 'e' <expressao_booleana>
               |'ou' <expressao_booleana>
               |
               
<Aux_Expression>  ::= <nao_expressao_aritmetica> <Aux_ExpressionR>
                   
<Aux_ExpressionR> ::= '>'  <Aux_Expression>
               | '<'  <Aux_Expression> 
               | '<='  <Aux_Expression>
               | '>='  <Aux_Expression>
               | '='  <Aux_Expression>
               | '<>'  <Aux_Expression>
               |  


<nao_expressao_aritmetica> ::= 'nao' <expressao_aritmetica> 
                            | <expressao_aritmetica> 
                            
!Expressão Aritmetica

<expressao_aritmetica>     ::= <Mult Exp> <expressao_aritmeticaR>

<expressao_aritmeticaR>    ::= '+' <expressao_aritmetica>
               | '-' <expressao_aritmetica>
               |

<Mult Exp>    ::= <Neg Exp> <Mult ExpR>
               
<Mult ExpR>   ::= '*' <Mult Exp>
               | '/' <Mult Exp>
               |


<Neg Exp>  ::= '-' <Valor> 
               |  <Valor> 

!Add more values to the rule below - as needed

<Valor>       ::= <id><aux_valor1>
               | numero
               |  '(' <expressao_booleana> ')'
               | BooleanLiteral
               
<aux_valor1> ::= '('<aux_valor2>|
<aux_valor2> ::= '('<aux_valor3>|<parametro>')'
<aux_valor3> ::= <Valor>')'')'<aux_valor4>
<aux_valor4> ::= '(''('<Valor>')'')'<aux_valor4> |
               

!Enquanto Faca

 <Enquanto>::='enquanto''('<expressao_booleana>')''faca'<bloco_de_codigo> 

!Se Entao Senao

<se_entao_senao>   ::='se' '('<expressao_booleana>')' 'entao'<bloco_de_codigo><SE>
           <SE>   ::= <NEGACAO>|       
<NEGACAO>          ::='senao'<bloco_de_codigo>

!Chamada de Função

!<chamada_funcao>::= <id>'('<parametro>')'
<parametro>     ::= tipo_cadeia<R>|<expressao_booleana><R>|tipo_caractere<R>|
<R>             ::=','<parametro> |

!Atribuicao

<Attr> ::= <id><aux_valor1><AttR1>
<AttR1> ::= '='<AttR2> | ';'
<AttR2>::= <expressao_aritmetica>';'|tipo_cadeia';'|tipo_caractere';'
         
            
! Declaração de Variaveis

<DEC>  ::= 'var'<tipo><id><A><V1>';'
<V1>   ::= ','<id><A><V1>|
<A>    ::= '(''('numero')'')'<A>|
<tipo> ::='inteiro' | 'cadeia' |'real'|'booleano'|'caractere'

!Declaração de constante
<DEC_CONST>::='const' <tipo> <id> '=' <DEC_CONST2>';'
<DEC_CONST2> ::=numero|tipo_cadeia|tipo_caractere
                          
!Leia

<Leia>  ::='leia''('<Exp>')'';'
<Exp>::=<id><aux_valor4><Exp2>
<Exp2> ::= ','<Exp> |

!Escreva

<Escreva>  ::='escreva''('<EXPRESSAO>
<EXPRESSAO>::=<RETORNO>')'';'

!Funcoes
      
 <Funcao>      ::='funcao' <tipo> <id> '('<D>')' 'inicio'<BXR> 'fim''('<RETORNO>')'';'
 <D>      ::=<tipo><id><D2>
 <D2>     ::= <Q>|           
 <Q>      ::=','<D>

